#pragma once
#include "Global.h"

class Unit {
	public:
	bool IsMoving = false;
	bool IsControlledByPlayer = false;
	float Visibility = 1, Cover = 1;
	int AmountOfActiveSoldiers = 0;
	int AmountOfWoundedSoldiers = 0;
	int AmountOfKilledSoldiers = 0;
	float Morale = 100, OldSuspression = 0, Suspression = 0;
	float Height = 0;
	float Energy = 100;
	float Ammo = 100;
	float MaxAmmo= 100;
	UnitType Type = Unit_Generic;
	float SpeedModifier=1,VisibilityModifier=1,CoverModifier=1;
	Sector* CurrentSector;
	vector <Soldier> Soldiers;
	vector <Order> Orders;
	vector <Unit*> UnitsInSight;
	vector <Unit*> EngagedUnits;
	vector <Weapon> GroupWeapons;
	void Initialize(float, float);
	static string GetRandomString(vector <string>);
	void PerformIterationActions();
	void FindOtherUnits();
	void EngageEnemyUnits();
	Soldier* FindSoldierToAttack();
	int EnergyReportTimer = 10;
	Unit();
	vector <string> T_AddressToCommanderQuiet;
	vector <string> T_AddressToCommanderEngaged;
	vector <string> T_AddressFromCommander;
	vector <string> T_ReceivedMovementOrder;
	vector <string> T_PositionReport_P1;
	vector <string> T_PositionReport_P2;
	vector <string> T_SucceededMovementOrder;
	vector <string> T_RevealUnit_P1_Movement;
	vector <string> T_RevealUnit_P1_Idle;
	vector <string> T_RevealUnit_P2_Infantry;
	vector <string> T_RevealUnit_P3_Amount;
	vector <string> T_RevealUnit_P4_Direction;
	vector <string> T_RevealUnit_P5_1_Direction;
	vector <string> T_RevealUnit_P5_2_Direction;
	vector <string> T_RevealUnit_P5_3_Direction;
	vector <string> T_RevealUnit_P5_4_Direction;
	vector <string> T_RevealUnit_P5_5_Direction;
	vector <string> T_RevealUnit_P5_6_Direction;
	vector <string> T_RevealUnit_P5_7_Direction;
	vector <string> T_RevealUnit_P5_8_Direction;
	vector <string> T_RevealUnit_P6_Distance;
	vector <string> T_RevealUnit_P7_Distance;
	vector <string> T_LostSightOnAnEnemyUnit;
	vector <string> T_CancellingAttackLostSight;
	vector <string> T_ContactReportNoSeenUnits;
	vector <string> T_ContactReport;
	vector <string> T_ContactUnderFire;
	vector <string> T_NoLongerUnderFire_P1;
	vector <string> T_NoLongerUnderFire_P2;
	vector <string> T_IsUnderFire;
	vector <string> T_OneWasWounded;
	vector <string> T_OneEnemyWasShot;
	vector <string> T_OneEnemyWasStabbed;
	vector <string> T_ReceivedOpenFireOrder;
	vector <string> T_ReceivedChargeOrder;
	vector <string> T_NoEnemiesToAttack;
	vector <string> T_CannotMovePinnedDown;
	vector <string> T_EnemyUnitFragged;
	vector <string> T_RetreatOrderReceived;
	vector <string> T_Status_P1;
	vector <string> T_Status_P2;
	vector <string> T_Status_P3;
	vector <string> T_Status_P4;
	vector <string> T_Status_P5;
	vector <string> T_Status_P6_1;
	vector <string> T_Status_P6_2;
	vector <string> T_Status_P6_3;
	vector <string> T_Status_P6_4;
	vector <string> T_Status_P7;
	vector <string> T_Status_P8_1;
	vector <string> T_Status_P8_2;
	vector <string> T_Status_P8_3;
	vector <string> T_Status_P8_4;
	vector <string> T_Status_P8_5;
	vector <string> T_Status_P9_1;
	vector <string> T_Status_P9_2;
	vector <string> T_Status_P9_3;
	vector <string> T_Status_P9_4;
	vector <string> T_Status_P9_5;
	vector <string> T_Status_P10;
	vector <string> T_Status_P11_1;
	vector <string> T_Status_P11_2;
	vector <string> T_Status_P11_3;
	vector <string> T_Status_P11_4;
	vector <string> T_Status_P12_1;
	vector <string> T_Status_P12_2;
	vector <string> T_Status_P13_1;
	vector <string> T_Status_P13_2;
	vector <string> T_Status_P13_3;
	vector <string> T_Status_P13_4;
	vector <string> T_Status_P13_5;
	vector <string> T_Status_P13_6;
	vector <string> T_Status_P14;
	vector <string> T_Status_P15_1;
	vector <string> T_Status_P15_2;
	vector <string> T_Status_P15_3;
	vector <string> T_Status_P15_4;
	vector <string> T_Status_P15_5;
	vector <string> T_Status_P15_6;
	vector <string> T_Status_P15_7;
	vector <string> T_Status_P15_8;
	vector <string> T_Status_P16;
	vector <string> T_Status_P17;
	vector <string> T_Status_P18_1;
	vector <string> T_Status_P18_2;
	vector <string> T_Status_P18_3;
	vector <string> T_Status_P18_4;
	vector <string> T_Status_P18_5;
	vector <string> T_SoldiersAreTired;
	vector <string> T_HasEnteredSector;
	vector <string> T_ArtilleryBarrageOrderReceived;
	vector <string> T_EnemyWasHitByArtyShell;
	vector <string> T_EnemyWasHitByArtyShellMultiple_P1;
	vector <string> T_EnemyWasHitByArtyShellMultiple_P2;
	vector <string> T_AllyWasHitByArtyShell;
	vector <string> T_ArtilleryBarrageOrderSucceed;
	vector <string> T_ArtilleryBarrageOrderInterruptedNoAmmo;
	};
